generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId              Int         @id @default(autoincrement())
  createdAt           DateTime    @default(now())
  password            String
  email               String      @unique
  projects            Project[]   @relation("owned")
  participatedProject Project[]   @relation("participated")
  Portfolio           Portfolio[]

  @@map("user")
}

model Project {
  projectId    Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  title        String
  contents     String?
  owner        User     @relation("owned", fields: [ownerId], references: [userId])
  ownerId      Int
  participants User[]   @relation("participated")

  @@map("project")
}

model Portfolio {
  portfolioId  Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  title        String
  owner        User          @relation(fields: [userId], references: [userId])
  userId       Int
  introduce    String
  projects     Project[]     @relation("participated")
  certificates Certificate[]
  websites     Website[]
  awards       Award[]
}

model Website {
  websiteId Int         @id @default(autoincrement())
  link      String
  Portfolio Portfolio[]
}

model Award {
  awardId   Int         @id @default(autoincrement())
  title     String
  content   String
  gotAt     DateTime
  Portfolio Portfolio[]
}

model Certificate {
  certificateId Int         @id @default(autoincrement())
  title         String
  content       String
  gotAt         DateTime
  Portfolio     Portfolio[]
}

model migration {
  revision           Int       @id @default(autoincrement())
  name               String
  datamodel          String
  status             String
  applied            Int
  rolled_back        Int
  datamodel_steps    String
  database_migration String
  errors             String
  started_at         DateTime
  finished_at        DateTime?

  @@map("_migration")
}
